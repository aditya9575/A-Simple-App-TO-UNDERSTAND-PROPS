In React, "props" is a shorthand for "properties," and it is a way to pass data from a parent component to a child component. 
Props are immutable, meaning they cannot be changed within the child component. The parent component sets the values of props, 
and the child component receives and uses those values.

Two concepts are covered here -> 

1st-> Parent to child data transfer 
2nd-> children to parent data transfer

--------------------------------------------------------------
Generally in react the data transfer is done one way only i.e -> parent component to child component 

-----------------------------------------------------------------------------------------------------------------------------------

1) Set up your project 
2) make components folder inside src folder -> inside it -> make 2 folders -> fromParentToChildren & fromChildrenToParent

3) Now firstly we'll see an example on how to transfer data from parent to children
4) In fromParentToChildren -> create a file named -> Parent.jsx-> inside it rafc 
5) In fromParentToChildren -> create a file named -> Child.jsx-> inside it rafc 

6) Now in our parent component -> we imported child and then passed on name and color properties to it .
   Now these properties will be accessible in the child component . 

i.e==>
-------------
import React from 'react';

// This line below is importing the Child component from the './Child' file. The Child component is a named export.
import { Child } from './Child';

export const Parent = () => {
  const color = "red";
  return (

//Now the Child component is being rendered, and it is being passed two props: name and color.and they will be accessible via props 
//in our child component     
    <Child name="Aditya" color={color} />
  );
};
-------------

7) Now in our child component ->  WE ACCESS THOSE PROPERTIES COMING FROM THE PARENT Component 

firstly in the "Child" named arrow function we pass in the props 
Now we are able to access  those properties in the child component too with the help of props 

So finally we do -> {props.name}  &  {props.color}

i.e==> 
-------------
import React from 'react';

//here below we are creating a functional component named Child and passing in the props as a parameter in it 
//The props parameter in the function is an object that contains all the properties passed to the Child component. 
export const Child = (props) => {
  return (
    <div>
      From Parent To Children This is child component 

      //here below we are accessing those properties via the dot operator 
      <div>{props.name}</div>
      <div>{props.color}</div>
    </div>
  );
};
-------------


8) Then finally When the App component is rendered, it will render the Parent component, and the Parent component, in turn,
 renders the Child component with the name and color props as explained in the previous discussions.

i.e
------------------
import React from 'react';
import { Parent } from './components/fromParentToChildren/Parent';

function App() {
  return (
    <div className="app">
     
      <Parent />
    
    </div>
  );
}

export default App;
------------------

Ultimatelt the gist comes out to be -> in our main App.js we are rendering the <Parent/> component  and also passing in the properties
to the child component -> which in returning is rendering -->the <Child/> component .

That is How we Show The Transfer of Data from Parent to Child.



*************************************************************************************************************************************

Now Transfer of data From CHILD Component -----> To PARENT Component


1) IN our parent.jsx of our fromChildrenToParent folder->  rafc -> 

i.e -> 
import React from 'react'
import { Child } from './Child'

export const Parent = () => {
  return (
    <div> THIS IS Parent
<Child/>    
    </div>
  )
}


2) Now here make a state for color and setColor and give the base value of color as default,also check if the useState is getting 
   imported 
 
   it should be above return statement inside the parent function  -> const[color,setColor]= useState("default");

  -Now inside our return statement --> inside the main div -->   {"This Is Parent Component Color:" + color}

3) Now in our app.js file change the import statement of parent as we are now showing the transfer from fromChildrenToParent
   i.e-> import { Parent } from './components/fromChildrenToParent/Parent';

   ---As You Do This And Run Your App now the display will be the statement we wrote above and the color value assigned to it as our 
   code states to do .



Now our task is to alter this color state using the child component .WHICH WILL ULTIMATELY SHOW THE TRANSFER OF DATA 
FROM -------> CHILD TO PARENT    


FOR IT Now

4) WE create a set color function in our parent.jsx file which will call setColor method from use state and set the color .
i.e-> const changeColor = (color) => {
setColor(color);
}



5) Now we pass this function as props to our child component below i.e-> <Child changeColor={changeColor}/> 


6) Now we go to our child component and consume this function so that we can alter it from there ,ultimately passing in the data 
   from child to parent 

//we passed in the changeColor function as a parameter  
   i.e -> export const Child = ({changeColor}) => 


 Now we create a button and add an onClick event listner to it which will trigger this changeColor function to alter the main text 
 which was set as default to the new color which we pass in now 

 i.e -> <button onClick= { () => {changeColor("red") } }>  Pass Color From Child TO Parent </button>



 ---------------------------------------------------------------------------------------------------------------------------------
 *********************************************************************************************************************************
 
 Ultimately this changeColor acts as a bridge function to pass in the data from child to parent and as an output you'll see a text 
 that we wrote earlier and its value set to default  -> This Is Parent Component Color:default

 and then a button with a text -> " Pass Color From Child TO Parent " when you click on it the text will change from "default" to "red" 

 *********************************************************************************************************************************
 ---------------------------------------------------------------------------------------------------------------------------------